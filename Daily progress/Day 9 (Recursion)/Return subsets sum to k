void solve(vector<int>arr, vector<vector<int>>&ans, vector<int>temp, int k){
    if(arr.size()==0){
        int sum=0;
        for(int i=0; i<temp.size();i++)
            sum+=temp[i];
        
        if(sum==k){
            reverse(temp.begin(),temp.end());
        ans.push_back(temp);
        }
        
        return;
    }
    
    vector<int>vec1(temp.begin(), temp.end());
    vector<int>vec2(temp.begin(), temp.end());
    
    vec2.push_back(arr[arr.size()-1]);
    arr.pop_back();
    
    solve(arr,ans,vec2,k);
    solve(arr,ans,vec1,k);
}
vector<vector<int>> findSubsetsThatSumToK(vector<int> arr, int n, int k)
{
    vector<vector<int>>ans;
    vector<int>temp;
    
    solve(arr,ans,temp,k);
    
    //(ans.begin(),ans.end());
    
    return ans;
}
